version: '3.9'

services:
  auth_postgres:
    image: postgres:13
    container_name: auth_postgres
    environment:
      POSTGRES_USER: ${AUTH_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
      POSTGRES_DB: ${AUTH_POSTGRES_DB}
    expose:
      - "5432"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${AUTH_POSTGRES_USER} -d ${AUTH_POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./auth/auth_postgres_db/db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
      - ./auth/postgres_instance_auth/data:/var/lib/postgresql/data
    networks:
      - api_network

  auth_service:
    build: ./auth/
    container_name: auth_service
    volumes:
      - ./auth/:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      auth_postgres:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://auth_service:8000/v1/ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - api_network

networks:
  api_network:
